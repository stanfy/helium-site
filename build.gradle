buildscript {
  repositories {
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots/'  }
    mavenCentral()
  }

  dependencies {
    classpath 'com.stanfy.helium:gradle-plugin:0.8.1-SNAPSHOT'
    classpath 'com.google.appengine:gradle-appengine-plugin:1.9.30'
  }
}

apply plugin: 'helium'
apply plugin: 'war'
apply plugin: 'appengine'

repositories {
  mavenCentral()
}

dependencies {
  appengineSdk 'com.google.appengine:appengine-java-sdk:1.9.32'
  compile 'com.squareup.retrofit:retrofit:1.9.0'
  compile 'com.google.code.gson:gson:1.7.2'
  compile 'javax.servlet:javax.servlet-api:3.0.1'
}

sourceCompatibility = JavaVersion.VERSION_1_7
targetCompatibility = JavaVersion.VERSION_1_7

ext {
  // Distinguish development end CloudEngine endpoints.
  if (project.hasProperty('endpoint')) {
    if (!project.endpoint.startsWith('http')) {
      throw new GradleException("Bad endpoint name '$endpoint'. Should start with 'http://...'")
    }
  } else {
    endpoint = 'http://localhost:8080'
  }
}

appengine {

  downloadSdk = true

  appcfg {
    oauth2 = true
  }

  app {
    id = 'helium-1222'
  }

  update {
    useJava7 = true
  }

  logs {
    severity = 0
    outputFile = file('debugLogs.txt')
  }
}

////// Hellium api and code generation scope. //////
import com.stanfy.helium.handler.codegen.java.constants.ConstantNameConverter

import javax.lang.model.element.Modifier

helium {
  specification file('src/api/public.api')

  sourceGen {
    def sourceOut = file("src/generated")

    entities {
      output = file("$sourceOut")

      options {
        packageName = 'com.stanfy.hellium.server.api.data'

        prettifyNames = true
        fieldModifiers = [Modifier.PRIVATE] as Set
        addGetters = true
        addSetters = true
      }
    }

    constants {
      output = file("$sourceOut")

      options {
        packageName = 'com.stanfy.hellium.server.api.constants'
        nameConverter = {
          "COLUMN_${it.canonicalName.toUpperCase(Locale.US)}".toString()
        } as ConstantNameConverter
      }
    }

    retrofit {
      output = file("$sourceOut")

      options {
        packageName = "com.stanfy.hellium.server.api"
      }
    }
  }

  variables {
    endpointLocation project.endpoint
  }
}

// Add swagger spec to the war.
afterEvaluate {
  war {
    dependsOn generateSwaggerSpec
    include {
      from file("$generateSwaggerSpec.output")
      rename '.+\\.json', 'spec/swagger.json'
    }
  }
}
